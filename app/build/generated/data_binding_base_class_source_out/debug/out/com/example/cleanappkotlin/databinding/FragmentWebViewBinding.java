// Generated by view binder compiler. Do not edit!
package com.example.cleanappkotlin.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.webkit.WebView;
import android.widget.ProgressBar;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.appcompat.widget.LinearLayoutCompat;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.cleanappkotlin.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentWebViewBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final AppCompatButton btnBack;

  @NonNull
  public final AppCompatButton btnClose;

  @NonNull
  public final AppCompatButton btnForward;

  @NonNull
  public final AppCompatButton btnRefresh;

  @NonNull
  public final LinearLayoutCompat linearLayoutCompat;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final WebView webView;

  private FragmentWebViewBinding(@NonNull ConstraintLayout rootView,
      @NonNull AppCompatButton btnBack, @NonNull AppCompatButton btnClose,
      @NonNull AppCompatButton btnForward, @NonNull AppCompatButton btnRefresh,
      @NonNull LinearLayoutCompat linearLayoutCompat, @NonNull ProgressBar progressBar,
      @NonNull WebView webView) {
    this.rootView = rootView;
    this.btnBack = btnBack;
    this.btnClose = btnClose;
    this.btnForward = btnForward;
    this.btnRefresh = btnRefresh;
    this.linearLayoutCompat = linearLayoutCompat;
    this.progressBar = progressBar;
    this.webView = webView;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentWebViewBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentWebViewBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_web_view, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentWebViewBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_back;
      AppCompatButton btnBack = ViewBindings.findChildViewById(rootView, id);
      if (btnBack == null) {
        break missingId;
      }

      id = R.id.btn_close;
      AppCompatButton btnClose = ViewBindings.findChildViewById(rootView, id);
      if (btnClose == null) {
        break missingId;
      }

      id = R.id.btn_forward;
      AppCompatButton btnForward = ViewBindings.findChildViewById(rootView, id);
      if (btnForward == null) {
        break missingId;
      }

      id = R.id.btn_refresh;
      AppCompatButton btnRefresh = ViewBindings.findChildViewById(rootView, id);
      if (btnRefresh == null) {
        break missingId;
      }

      id = R.id.linearLayoutCompat;
      LinearLayoutCompat linearLayoutCompat = ViewBindings.findChildViewById(rootView, id);
      if (linearLayoutCompat == null) {
        break missingId;
      }

      id = R.id.progressBar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.webView;
      WebView webView = ViewBindings.findChildViewById(rootView, id);
      if (webView == null) {
        break missingId;
      }

      return new FragmentWebViewBinding((ConstraintLayout) rootView, btnBack, btnClose, btnForward,
          btnRefresh, linearLayoutCompat, progressBar, webView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
